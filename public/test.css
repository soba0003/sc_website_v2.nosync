/* reset */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --bar-width: 60px;
  --bar-height: 8px;
  --burger-gap: 6px;
  --foreground: hotpink;
  --animation-timing: 200ms ease-in-out;
  --x-width: 40px;
}

body {
  display: grid;
}

.burger {
  margin-top: 5px;
  margin-right: 5px;
  display: flex;
  flex-direction: column;
  gap: var(--burger-gap);
  background-color: red;
  width: max-content;
  justify-self: end;
  position: absolute;
  z-index: 100;
  /* gør man kan se at man kan klikke på den */
  cursor: pointer;
}
.burger::before,
.burger input {
  /* content giver before og efter elementerne indhold, så man kan se dem på skærmen */
  content: "";
  width: var(--bar-width);
  height: var(--bar-height);
  background-color: var(--foreground);
}

.burger::before,
.burger input,
div {
  transform-origin: left center;
  transition:
    opacity var(--animation-timing),
    width var(--animation-timing),
    translate var(--animation-timing),
    rotate var(--animation-timing);
}

.burger input {
  appearance: none;
  outline: none;
  pointer-events: none;
}

div {
  text-align: center;
}

.burger:has(input:checked) div {
  opacity: 0;
  width: 0;
}
/* den kigger på om burger har en input indeni sig der er checked, hvis ja, så vælger den :before */
.burger:has(input:checked)::before {
  rotate: 45deg;
  width: var(--x-width);
  translate: 0;
}

.burger:has(input:checked) input {
  rotate: -45deg;
  width: var(--x-width);
  translate: 0 14px;
}

nav {
  display: flex;
  flex-direction: column;
}

.sidebar {
  justify-self: end;
  position: absolute;
  z-index: 10;
  transition: translate var(--animation-timing);
  translate: +100%;
  padding: 70px 10px 0 10px;
  background-color: red;
  width: 150px;
  min-height: 50vh;
}

/* + vælger noget udenfor burger, men tjekker stadig om input er checked */
.burger:has(input:checked) + .sidebar {
  translate: 0;
}
